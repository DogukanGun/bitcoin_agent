/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISubscriptionFactory,
  ISubscriptionFactoryInterface,
} from "../../../contracts/interfaces/ISubscriptionFactory";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "agreementId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "provider",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "period",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCover",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct ISubscriptionFactory.PaymentAgreement",
        name: "agreement",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "providerSig",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "userSig",
        type: "bytes",
      },
    ],
    name: "createSubscription",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "createUserAgent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "agreementId",
        type: "bytes32",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSubscriptions",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ISubscriptionFactory__factory {
  static readonly abi = _abi;
  static createInterface(): ISubscriptionFactoryInterface {
    return new Interface(_abi) as ISubscriptionFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISubscriptionFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ISubscriptionFactory;
  }
}
